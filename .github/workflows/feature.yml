name: CI feature

on:
  push:
    branches: [ feature/**, fix/**, develop, feat/** ]

env:
  PROJECT_NAME: "api-flask-1"
  AWS_ACCESS_KEY_ID:  ${{   secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{   secrets.AWS_SECRET_ACCESS_KEY }}
  PROXY_ENABLE: true
  PRERELEASE: ${{ secrets.PRERELEASE }}
jobs:
  ci_feature:
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout Origin"
      uses: actions/checkout@v2

    - uses: chrisdickinson/setup-yq@latest
      with:
        yq-version: 2.4.1
        yq-url: https://github.com/mikefarah/yq/releases/download/{version}/yq_{platform}_amd64

    - name: "Compilig"
      run: |
        echo "Compiling...."

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV


    - name: Checking new version based commits
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: main
        dry_run: true
        append_to_pre_release_tag: ${{ env.SHORT_SHA }}


    - name: AWS ECR
      # You may pin to the exact commit or the version.
      # uses: kciter/aws-ecr-action@79255b7c5aa03dbf6d7c46cff2bfd049874cd98d
      uses: kciter/aws-ecr-action@v4
      with:
        # The AWS access key id
        access_key_id:  ${{   secrets.AWS_ACCESS_KEY_ID }}
        # The AWS secret access key
        secret_access_key: ${{   secrets.AWS_SECRET_ACCESS_KEY }}
        # AWS Account ID
        account_id: 909517579108
        # Name of your ECR repository
        repo: ${{ env.PROJECT_NAME }}
        # The AWS region
        region: eu-west-2
        # Set this to true to create the repository if it does not already exist
        create_repo: true
        tags:  ${{ env.SHORT_SHA }}
        # Name of Dockerfile to use
        dockerfile: .github/dockerfile/Dockerfile

    - name: Create package Helm
      env:
        CHART_VERSION: ${{ steps.tag_version.outputs.new_tag }}
        ECR: "909517579108.dkr.ecr.eu-west-2.amazonaws.com"
        HELM_EXPERIMENTAL_OCI: 1 
      run: |

        aws ecr get-login-password --region eu-west-2 | helm registry login \
          --username AWS --password-stdin ${{env.ECR}}

        helm pull oci://{{ env.ECR }}/`yq read .github/helm/values.yaml template.package`--version `yq read .github/helm/values.yaml template.version` --untar --insecure-skip-tls-verify

        mv `yq read .github/helm/values.yaml template.package` ${{env.PROJECT_NAME}}
        sed -i.bak "s#name: `yq read .github/helm/values.yaml template.package`#name: $PROJECT_NAME#"  $PROJECT_NAME/Chart.yaml
        yq merge -a -x -i $PROJECT_NAME/values.yaml .github/helm/values.yaml
        yq write $PROJECT_NAME/values.yaml image.tag $CHART_VERSION -i
        yq write $PROJECT_NAME/Chart.yaml version $CHART_VERSION -i
        yq write $PROJECT_NAME/Chart.yaml appversion $CHART_VERSION -i
        helm push ${CHART_NAME}-${{env.IMAGE_TAG}}.tgz oci://909517579108.dkr.ecr.eu-west-2.amazonaws.com/
        helm package ${PROJECT_NAME}
        helm push ${PROJECT_NAME}-${{env.CHART_VERSION}}.tgz oci://909517579108.dkr.ecr.eu-west-2.amazonaws.com/
