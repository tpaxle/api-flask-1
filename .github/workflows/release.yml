# This is a basic workflow to help you get started with Actions

name: Release Version CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags: v[0-9]+.[0-9]+.[0-9]+

env:
  PROJECT_NAME: "api-flask-1"
  AWS_ACCESS_KEY_ID:  ${{   secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{   secrets.AWS_SECRET_ACCESS_KEY }}

  PROXY_ENABLE: true
  HTTP_PROXY: "http://proxyapps.gsnet.corp:80"
  HTTPS_PROXY: "http://proxyapps.gsnet.corp:80"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cd_pre:
    environment: pre_environment
    runs-on: ubuntu-latest # linux-platform, ubuntu-latest
    steps:

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install Chart ${{ env.PROJECT_NAME }}-${{env.RELEASE_VERSION}} in Dev environment
        env:
          CHART_VERSION: ${{env.RELEASE_VERSION}}
          ECR: "909517579108.dkr.ecr.eu-west-2.amazonaws.com"
        run: |
          aws ecr get-login-password --region eu-west-2 | helm registry login \
            --username AWS --password-stdin ${{env.ECR}}
          helm pull oci://${{ env.ECR }}/api-flask-1 --version $CHART_VERSION --untar --insecure-skip-tls-verify
          ls -al
          helm upgrade --install ${{ env.PROJECT_NAME }} ${{env.PROJECT_NAME}}/ --version $CHART_VERSION \
            --insecure-skip-tls-verify \
            -n ${{secrets.OC_NAMESPACE}} \
            --set replicaCount=1 \
            --set namespace=${{secrets.OC_NAMESPACE}} \
            --set secrets.APM_ENABLED=${{ secrets.APM_ENABLED }} \
            --set secrets.APM_SERVERTOKEN=${{ secrets.APM_SERVERTOKEN }} \
            --set secrets.APM_SERVERURL=${{ secrets.APM_SERVERURL }} \
            --set secrets.APM_ENV=PRE \
            --history-max 3
